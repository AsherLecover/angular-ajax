{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/ajax/ajax.component.ts","./src/app/components/ajax/ajax.component.html","./src/app/services/srvice.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-ajax';\n}\n","<app-ajax></app-ajax>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http'\n\n\n\nimport { AppComponent } from './app.component';\nimport { from } from 'rxjs';\nimport { AjaxComponent } from './components/ajax/ajax.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AjaxComponent,\n  \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { SrviceService } from '../../services/srvice.service';\nimport { log } from 'util';\n\n@Component({\n  selector: 'app-ajax',\n  templateUrl: './ajax.component.html',\n  styleUrls: ['./ajax.component.css']\n})\nexport class AjaxComponent implements OnInit {\n  public myJsonData = [];\n  keysArr = [];\n\n  constructor(private jasnDataServic: SrviceService) {\n    // this.keys()\n  }\n\n  ngOnInit(): void {\n    this.jasnDataServic.getJsonData().subscribe((data) => {\n      this.myJsonData = data;\n      this.keysArr = Object.keys(this.myJsonData[0]);\n    });\n  }\n}\n","<p>ajax works!\n</p>\n\n<table>\n    <thead>\n        <tr>\n            <th\n                *ngFor=\"let key of keysArr\">\n                {{key}}\n            </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr\n            *ngFor=\"let i of myJsonData\">\n            <td>{{i.id}}\n            </td>\n            <td>{{i.first_name}}\n            </td>\n            <td>{{i.last_name}}\n            </td>\n            <td>{{i.email}}\n            </td>\n            <td>{{i.gender}}\n            </td>\n        </tr>\n    </tbody>\n</table>","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { IData } from '../data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SrviceService {\n\n  private _url: string = \"https://raw.githubusercontent.com/AsherLecover/DB-ajax/master/db.json\"\n\n  constructor(private http: HttpClient) { }\n\n  getJsonData(): Observable<IData[]>{\n    return this.http.get<IData[]>(this._url)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}